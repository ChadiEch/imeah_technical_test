import React, { useState, useEffect } from 'react';
import axios from 'axios';
import { useNavigate } from 'react-router-dom';
import { Button, Container, Typography, Box, Card, CardContent } from '@mui/material';

const Dashboard = () => {
  const [items, setItems] = useState([]);
  const [categories, setCategories] = useState([]);
  const [filteredItems, setFilteredItems] = useState([]);
  const [selectedCategory, setSelectedCategory] = useState(null);
  const navigate = useNavigate();

  useEffect(() => {
    const fetchData = async () => {
      try {
        const itemsResponse = await axios.get('http://localhost:5000/items');
        const categoriesResponse = await axios.get('http://localhost:5000/items/categories');
        setItems(itemsResponse.data);
        setCategories(categoriesResponse.data);
        setFilteredItems(itemsResponse.data); // Start with showing all items
      } catch (error) {
        console.error('Error fetching data:', error);
      }
    };

    fetchData();
  }, []);

  const handleCategoryClick = (categoryId) => {
    if (selectedCategory === categoryId) {
      // Reset to show all items if the same category is clicked again
      setFilteredItems(items);
      setSelectedCategory(null);
    } else {
      // Filter items by the selected category
      const filtered = items.filter(item => item.categoryId === categoryId);
      setFilteredItems(filtered);
      setSelectedCategory(categoryId);
    }
  };

    return (
    <Container>
      <Typography variant="h4" gutterBottom>
        Welcome, {userName}
      </Typography>

      {isAuthenticated ? (
        <Button variant="contained" color="primary" onClick={() => navigate('/add-item')}>
          Add New Item
        </Button>
      ) : (
        <Button variant="contained" color="secondary" onClick={() => navigate('/login')}>
          Login
        </Button>
      )}

      <Grid container spacing={3} marginTop={2}>
        {items.map((item) => (
          <Grid item xs={12} sm={6} md={4} key={item.id}>
            <Card className="card">
              <CardContent>
                <Typography variant="h5">{item.title}</Typography>

                {/* Description: truncated to 2 lines */}
                <Typography variant="body2">
                  {item.description.substring(0, 100)}...
                </Typography>

                {/* Read more button to open the dialog */}
                <Button
                  variant="text"
                  color="primary"
                  onClick={() => handleOpenDialog(item)}
                  className="read-more"
                >
                  Read more
                </Button>

                <Typography variant="caption">
                  {new Date(item.timestamp).toLocaleString()}
                </Typography>

                {isAuthenticated && userId == item.userId && (
                  <Box mt={2}>
                    <Button
                      variant="outlined"
                      color="primary"
                      onClick={() => navigate(`/edit-item/${item.id}`)}
                      style={{ marginRight: '10px' }}
                    >
                      Edit
                    </Button>
                    <Button
                      variant="outlined"
                      color="secondary"
                      onClick={() => handleDelete(item.id)}
                    >
                      Delete
                    </Button>
                  </Box>
                )}
              </CardContent>
            </Card>
          </Grid>
        ))}
      </Grid>

      {/* Dialog for showing full description */}
      {selectedItem && (
        <Dialog open={openDialog} onClose={handleCloseDialog} maxWidth="sm" fullWidth>
          <DialogTitle>{selectedItem.title}</DialogTitle>
          <DialogContent>
            <Typography>{selectedItem.description}</Typography>
          </DialogContent>
          <DialogActions>
            <Button onClick={handleCloseDialog} color="primary">
              Exit
            </Button>
          </DialogActions>
        </Dialog>
      )}
    </Container>
  );
};

export default Dashboard;

