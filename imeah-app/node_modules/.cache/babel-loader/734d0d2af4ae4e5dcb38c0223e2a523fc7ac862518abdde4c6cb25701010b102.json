{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:5000' // Ensure this is the correct base URL\n});\n\n// Update the API URL to match the backend server's address\nexport const signup = createAsyncThunk('auth/signup', async userData => {\n  const response = await axios.post('http://localhost:5000/auth/signup', userData); // Corrected URL\n  return response.data;\n});\n\n// Async thunk for login\nexport const login = createAsyncThunk('auth/login', async userData => {\n  const response = await axios.post(baseURL, userData);\n  return response.data;\n});\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    user: null,\n    token: localStorage.getItem('token') || null,\n    status: 'idle',\n    error: null\n  },\n  reducers: {\n    logout: state => {\n      state.user = null;\n      state.token = null;\n      localStorage.removeItem('token');\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(login.pending, state => {\n      state.status = 'loading';\n    }).addCase(login.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.token = action.payload.access_token;\n      localStorage.setItem('token', action.payload.access_token);\n    }).addCase(login.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    });\n  }\n});\nexport const {\n  logout\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","api","create","baseURL","signup","userData","response","post","data","login","authSlice","name","initialState","user","token","localStorage","getItem","status","error","reducers","logout","state","removeItem","extraReducers","builder","addCase","pending","fulfilled","action","payload","access_token","setItem","rejected","message","actions","reducer"],"sources":["C:/Users/user/Desktop/imea/imeah-app/src/authentications/auth/authSlice.js"],"sourcesContent":["\r\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\n\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:5000', // Ensure this is the correct base URL\r\n});\r\n\r\n\r\n// Update the API URL to match the backend server's address\r\nexport const signup = createAsyncThunk('auth/signup', async (userData) => {\r\n  const response = await axios.post('http://localhost:5000/auth/signup', userData); // Corrected URL\r\n  return response.data;\r\n});\r\n\r\n// Async thunk for login\r\nexport const login = createAsyncThunk('auth/login', async (userData) => {\r\n  const response = await axios.post(baseURL, userData);\r\n  return response.data;\r\n});\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState: {\r\n    user: null,\r\n    token: localStorage.getItem('token') || null,\r\n    status: 'idle',\r\n    error: null,\r\n  },\r\n  reducers: {\r\n    logout: (state) => {\r\n      state.user = null;\r\n      state.token = null;\r\n      localStorage.removeItem('token');\r\n    },\r\n    \r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(login.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(login.fulfilled, (state, action) => {\r\n        state.status = 'succeeded';\r\n        state.token = action.payload.access_token;\r\n        localStorage.setItem('token', action.payload.access_token);\r\n      })\r\n      .addCase(login.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        state.error = action.error.message;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { logout } = authSlice.actions;\r\nexport default authSlice.reducer;\r\n\r\n"],"mappings":"AACA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAGzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,uBAAuB,CAAE;AACpC,CAAC,CAAC;;AAGF;AACA,OAAO,MAAMC,MAAM,GAAGL,gBAAgB,CAAC,aAAa,EAAE,MAAOM,QAAQ,IAAK;EACxE,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAI,CAAC,mCAAmC,EAAEF,QAAQ,CAAC,CAAC,CAAC;EAClF,OAAOC,QAAQ,CAACE,IAAI;AACtB,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,KAAK,GAAGV,gBAAgB,CAAC,YAAY,EAAE,MAAOM,QAAQ,IAAK;EACtE,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAI,CAACJ,OAAO,EAAEE,QAAQ,CAAC;EACpD,OAAOC,QAAQ,CAACE,IAAI;AACtB,CAAC,CAAC;AAEF,MAAME,SAAS,GAAGZ,WAAW,CAAC;EAC5Ba,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,IAAI,EAAE,IAAI;IACVC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI;IAC5CC,MAAM,EAAE,MAAM;IACdC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE;IACRC,MAAM,EAAGC,KAAK,IAAK;MACjBA,KAAK,CAACR,IAAI,GAAG,IAAI;MACjBQ,KAAK,CAACP,KAAK,GAAG,IAAI;MAClBC,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;IAClC;EAEF,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAAChB,KAAK,CAACiB,OAAO,EAAGL,KAAK,IAAK;MACjCA,KAAK,CAACJ,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDQ,OAAO,CAAChB,KAAK,CAACkB,SAAS,EAAE,CAACN,KAAK,EAAEO,MAAM,KAAK;MAC3CP,KAAK,CAACJ,MAAM,GAAG,WAAW;MAC1BI,KAAK,CAACP,KAAK,GAAGc,MAAM,CAACC,OAAO,CAACC,YAAY;MACzCf,YAAY,CAACgB,OAAO,CAAC,OAAO,EAAEH,MAAM,CAACC,OAAO,CAACC,YAAY,CAAC;IAC5D,CAAC,CAAC,CACDL,OAAO,CAAChB,KAAK,CAACuB,QAAQ,EAAE,CAACX,KAAK,EAAEO,MAAM,KAAK;MAC1CP,KAAK,CAACJ,MAAM,GAAG,QAAQ;MACvBI,KAAK,CAACH,KAAK,GAAGU,MAAM,CAACV,KAAK,CAACe,OAAO;IACpC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEb;AAAO,CAAC,GAAGV,SAAS,CAACwB,OAAO;AAC3C,eAAexB,SAAS,CAACyB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}