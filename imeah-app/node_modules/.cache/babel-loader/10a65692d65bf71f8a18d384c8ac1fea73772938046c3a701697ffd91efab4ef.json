{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\imea\\\\imeah-app\\\\src\\\\dashboard\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\n// src/dashboard/Dashboard.jsx\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { Container, Grid, Card, CardContent, Typography, Button } from '@mui/material';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [items, setItems] = useState([]);\n  const [userId, setUserId] = useState(null); // Store the logged-in user's ID\n  const navigate = useNavigate();\n  const isAuthenticated = !!localStorage.getItem('token'); // Check if user is logged in\n\n  const fetchItems = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/items');\n      setItems(response.data);\n    } catch (error) {\n      console.error('Error fetching items', error);\n    }\n  };\n  const handleDelete = async itemId => {\n    try {\n      await axios.delete(`http://localhost:5000/items/${itemId}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      fetchItems(); // Refresh the items after deletion\n    } catch (error) {\n      console.error('Error deleting item', error);\n    }\n  };\n\n  // Fetch user ID from localStorage\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      // For simplicity, assume the token contains userId\n      // In a real-world scenario, you would verify the token and extract the userId\n      const decodedToken = JSON.parse(atob(token.split('.')[1])); // Decode JWT payload\n      setUserId(decodedToken.userId); // Set the user ID from the token payload\n    }\n    fetchItems();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), isAuthenticated ? /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => navigate('/add-item'),\n      children: \"Add New Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: () => navigate('/login'),\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      marginTop: 2,\n      children: items.map(item => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: item.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              children: new Date(item.timestamp).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), isAuthenticated && userId === item.userId && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                color: \"primary\",\n                onClick: () => navigate(`/edit-item/${item.id}`),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                color: \"secondary\",\n                onClick: () => handleDelete(item.id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"nH7kGwypFaZjkcXfy+Bgo3lVliU=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","useNavigate","Container","Grid","Card","CardContent","Typography","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","items","setItems","userId","setUserId","navigate","isAuthenticated","localStorage","getItem","fetchItems","response","get","data","error","console","handleDelete","itemId","delete","headers","Authorization","token","decodedToken","JSON","parse","atob","split","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","color","onClick","container","spacing","marginTop","map","item","xs","sm","md","title","description","Date","timestamp","toLocaleString","id","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/imea/imeah-app/src/dashboard/Dashboard.jsx"],"sourcesContent":["// src/dashboard/Dashboard.jsx\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Container, Grid, Card, CardContent, Typography, Button } from '@mui/material';\r\n\r\nconst Dashboard = () => {\r\n  const [items, setItems] = useState([]);\r\n  const [userId, setUserId] = useState(null); // Store the logged-in user's ID\r\n  const navigate = useNavigate();\r\n  const isAuthenticated = !!localStorage.getItem('token');  // Check if user is logged in\r\n\r\n  const fetchItems = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/items');\r\n      setItems(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching items', error);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (itemId) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/items/${itemId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n      fetchItems(); // Refresh the items after deletion\r\n    } catch (error) {\r\n      console.error('Error deleting item', error);\r\n    }\r\n  };\r\n\r\n  // Fetch user ID from localStorage\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      // For simplicity, assume the token contains userId\r\n      // In a real-world scenario, you would verify the token and extract the userId\r\n      const decodedToken = JSON.parse(atob(token.split('.')[1])); // Decode JWT payload\r\n      setUserId(decodedToken.userId); // Set the user ID from the token payload\r\n    }\r\n    fetchItems();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Dashboard\r\n      </Typography>\r\n\r\n      {/* Show \"Add New Item\" button if authenticated, otherwise show \"Login\" button */}\r\n      {isAuthenticated ? (\r\n        <Button variant=\"contained\" color=\"primary\" onClick={() => navigate('/add-item')}>\r\n          Add New Item\r\n        </Button>\r\n      ) : (\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={() => navigate('/login')}>\r\n          Login\r\n        </Button>\r\n      )}\r\n\r\n      <Grid container spacing={3} marginTop={2}>\r\n        {items.map((item) => (\r\n          <Grid item xs={12} sm={6} md={4} key={item.id}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h5\">{item.title}</Typography>\r\n                <Typography variant=\"body2\">{item.description}</Typography>\r\n                <Typography variant=\"caption\">\r\n                  {new Date(item.timestamp).toLocaleString()}\r\n                </Typography>\r\n                {/* Show Edit/Delete buttons only if the logged-in user is the creator of the item */}\r\n                {isAuthenticated && userId === item.userId && (\r\n                  <>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      onClick={() => navigate(`/edit-item/${item.id}`)}\r\n                    >\r\n                      Edit\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"secondary\"\r\n                      onClick={() => handleDelete(item.id)}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </>\r\n                )}\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}