{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const signup = createAsyncThunk('auth/signup', async userData => {\n  const response = await axios.post('http://localhost:5000/auth/signup', userData); // Corrected URL\n  return response.data;\n});\nexport const login = createAsyncThunk('auth/login', async (credentials, thunkAPI) => {\n  try {\n    const response = await axios.post('http://localhost:5000/auth/login', credentials);\n    localStorage.setItem('userId', response.data.userId);\n    localStorage.setItem('userName', response.data.name);\n    return response.data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data);\n  }\n});\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    user: null,\n    status: 'idle',\n    error: null\n  },\n  reducers: {\n    logout: state => {\n      state.user = null;\n      state.token = null;\n      localStorage.removeItem('token');\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(login.pending, state => {\n      state.status = 'loading';\n    }).addCase(login.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.user = action.payload;\n    }).addCase(login.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  logout\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","signup","userData","response","post","data","login","credentials","thunkAPI","localStorage","setItem","userId","name","error","rejectWithValue","authSlice","initialState","user","status","reducers","logout","state","token","removeItem","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["C:/Users/user/Desktop/imea/imeah-app/src/authentications/auth/authSlice.js"],"sourcesContent":["\r\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nexport const signup = createAsyncThunk('auth/signup', async (userData) => {\r\n  const response = await axios.post('http://localhost:5000/auth/signup', userData); // Corrected URL\r\n  return response.data;\r\n});\r\n\r\nexport const login = createAsyncThunk(\r\n  'auth/login',\r\n  async (credentials, thunkAPI) => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/auth/login', credentials);\r\n      localStorage.setItem('userId', response.data.userId);\r\n      localStorage.setItem('userName', response.data.name);\r\n      return response.data;\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.response.data);\r\n    }\r\n  }\r\n);\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState: {\r\n    user: null,\r\n    status: 'idle',\r\n    error: null,\r\n  },\r\n  reducers: {\r\n    logout: (state) => {\r\n      state.user = null;\r\n      state.token = null;\r\n      localStorage.removeItem('token');\r\n    },\r\n    \r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(login.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(login.fulfilled, (state, action) => {\r\n        state.status = 'succeeded';\r\n        state.user = action.payload;\r\n      })\r\n      .addCase(login.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { logout } = authSlice.actions;\r\nexport default authSlice.reducer;\r\n\r\n"],"mappings":"AACA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,MAAM,GAAGF,gBAAgB,CAAC,aAAa,EAAE,MAAOG,QAAQ,IAAK;EACxE,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,IAAI,CAAC,mCAAmC,EAAEF,QAAQ,CAAC,CAAC,CAAC;EAClF,OAAOC,QAAQ,CAACE,IAAI;AACtB,CAAC,CAAC;AAEF,OAAO,MAAMC,KAAK,GAAGP,gBAAgB,CACnC,YAAY,EACZ,OAAOQ,WAAW,EAAEC,QAAQ,KAAK;EAC/B,IAAI;IACF,MAAML,QAAQ,GAAG,MAAMH,KAAK,CAACI,IAAI,CAAC,kCAAkC,EAAEG,WAAW,CAAC;IAClFE,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEP,QAAQ,CAACE,IAAI,CAACM,MAAM,CAAC;IACpDF,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEP,QAAQ,CAACE,IAAI,CAACO,IAAI,CAAC;IACpD,OAAOT,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACd,OAAOL,QAAQ,CAACM,eAAe,CAACD,KAAK,CAACV,QAAQ,CAACE,IAAI,CAAC;EACtD;AACF,CACF,CAAC;AAED,MAAMU,SAAS,GAAGjB,WAAW,CAAC;EAC5Bc,IAAI,EAAE,MAAM;EACZI,YAAY,EAAE;IACZC,IAAI,EAAE,IAAI;IACVC,MAAM,EAAE,MAAM;IACdL,KAAK,EAAE;EACT,CAAC;EACDM,QAAQ,EAAE;IACRC,MAAM,EAAGC,KAAK,IAAK;MACjBA,KAAK,CAACJ,IAAI,GAAG,IAAI;MACjBI,KAAK,CAACC,KAAK,GAAG,IAAI;MAClBb,YAAY,CAACc,UAAU,CAAC,OAAO,CAAC;IAClC;EAEF,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACpB,KAAK,CAACqB,OAAO,EAAGN,KAAK,IAAK;MACjCA,KAAK,CAACH,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDQ,OAAO,CAACpB,KAAK,CAACsB,SAAS,EAAE,CAACP,KAAK,EAAEQ,MAAM,KAAK;MAC3CR,KAAK,CAACH,MAAM,GAAG,WAAW;MAC1BG,KAAK,CAACJ,IAAI,GAAGY,MAAM,CAACC,OAAO;IAC7B,CAAC,CAAC,CACDJ,OAAO,CAACpB,KAAK,CAACyB,QAAQ,EAAE,CAACV,KAAK,EAAEQ,MAAM,KAAK;MAC1CR,KAAK,CAACH,MAAM,GAAG,QAAQ;MACvBG,KAAK,CAACR,KAAK,GAAGgB,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEV;AAAO,CAAC,GAAGL,SAAS,CAACiB,OAAO;AAC3C,eAAejB,SAAS,CAACkB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}