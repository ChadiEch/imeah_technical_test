{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\imea\\\\imeah-app\\\\src\\\\dashboard\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Button, Container, Typography, Box, Card, CardContent } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [items, setItems] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [filteredItems, setFilteredItems] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n\n  // Fetch all items and categories on component mount\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const itemsResponse = await axios.get('http://localhost:5000/items');\n        const categoriesResponse = await axios.get('http://localhost:5000/items/categories');\n        setItems(itemsResponse.data);\n        setCategories(categoriesResponse.data);\n        setFilteredItems(itemsResponse.data); // Initialize with all items\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Handle category button click\n  const handleCategoryClick = categoryId => {\n    if (selectedCategory === categoryId) {\n      // If the same category is clicked again, reset to show all items\n      setFilteredItems(items);\n      setSelectedCategory(null);\n    } else {\n      // Filter items based on the selected category\n      const filtered = items.filter(item => item.categoryId === categoryId);\n      setFilteredItems(filtered);\n      setSelectedCategory(categoryId);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Item Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mb: 2,\n      children: categories.map(category => /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: selectedCategory === category.id ? 'secondary' : 'primary',\n        onClick: () => handleCategoryClick(category.id),\n        sx: {\n          marginRight: 1,\n          marginBottom: 1\n        },\n        children: category.name\n      }, category.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: filteredItems.length > 0 ? filteredItems.map(item => /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          marginBottom: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: item.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"No items available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => navigate('/add-item'),\n      children: \"Add New Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"8Njk5SSzn76E04DFDJ4zSl9FkEc=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","Button","Container","Typography","Box","Card","CardContent","jsxDEV","_jsxDEV","Dashboard","_s","items","setItems","categories","setCategories","filteredItems","setFilteredItems","selectedCategory","setSelectedCategory","fetchData","itemsResponse","get","categoriesResponse","data","error","console","handleCategoryClick","categoryId","filtered","filter","item","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","mb","map","category","color","id","onClick","sx","marginRight","marginBottom","name","length","title","description","navigate","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/imea/imeah-app/src/dashboard/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Button, Container, Typography, Box, Card, CardContent } from '@mui/material';\r\n\r\nconst Dashboard = () => {\r\n  const [items, setItems] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [filteredItems, setFilteredItems] = useState([]);\r\n  const [selectedCategory, setSelectedCategory] = useState(null);\r\n\r\n  // Fetch all items and categories on component mount\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const itemsResponse = await axios.get('http://localhost:5000/items');\r\n        const categoriesResponse = await axios.get('http://localhost:5000/items/categories');\r\n\r\n        setItems(itemsResponse.data);\r\n        setCategories(categoriesResponse.data);\r\n        setFilteredItems(itemsResponse.data); // Initialize with all items\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Handle category button click\r\n  const handleCategoryClick = (categoryId) => {\r\n    if (selectedCategory === categoryId) {\r\n      // If the same category is clicked again, reset to show all items\r\n      setFilteredItems(items);\r\n      setSelectedCategory(null);\r\n    } else {\r\n      // Filter items based on the selected category\r\n      const filtered = items.filter(item => item.categoryId === categoryId);\r\n      setFilteredItems(filtered);\r\n      setSelectedCategory(categoryId);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Item Dashboard\r\n      </Typography>\r\n\r\n      {/* Category Buttons */}\r\n      <Box mb={2}>\r\n        {categories.map((category) => (\r\n          <Button\r\n            key={category.id}\r\n            variant=\"contained\"\r\n            color={selectedCategory === category.id ? 'secondary' : 'primary'}\r\n            onClick={() => handleCategoryClick(category.id)}\r\n            sx={{ marginRight: 1, marginBottom: 1 }}\r\n          >\r\n            {category.name}\r\n          </Button>\r\n        ))}\r\n      </Box>\r\n\r\n      {/* Display Items */}\r\n      <Box>\r\n        {filteredItems.length > 0 ? (\r\n          filteredItems.map((item) => (\r\n            <Card key={item.id} sx={{ marginBottom: 2 }}>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">{item.title}</Typography>\r\n                <Typography>{item.description}</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          ))\r\n        ) : (\r\n          <Typography>No items available</Typography>\r\n        )}\r\n      </Box>\r\n\r\n      {/* Add Item Button */}\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={() => navigate('/add-item')}\r\n      >\r\n        Add New Item\r\n      </Button>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}