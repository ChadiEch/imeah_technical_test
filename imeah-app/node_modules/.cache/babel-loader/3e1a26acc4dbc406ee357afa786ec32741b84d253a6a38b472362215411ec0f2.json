{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\imea\\\\imeah-app\\\\src\\\\dashboard\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\n// src/dashboard/Dashboard.jsx\nimport React, { useState, useEffect } from 'react';\nimport { Container, Grid, Card, CardContent, Typography } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [items, setItems] = useState([]);\n\n  // Function to fetch items from the backend\n  const fetchItems = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/items'); // Adjust API endpoint as needed\n      setItems(response.data);\n    } catch (error) {\n      console.error('Error fetching items:', error);\n    }\n  };\n\n  // Auto-refresh the list when the component mounts\n  useEffect(() => {\n    fetchItems();\n\n    // Set up a polling mechanism to refresh items every 10 seconds\n    const intervalId = setInterval(fetchItems, 10000);\n\n    // Clear interval on component unmount\n    return () => clearInterval(intervalId);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"h1\",\n      gutterBottom: true,\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: items.map(item => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              component: \"h2\",\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"textSecondary\",\n              children: item.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              color: \"textSecondary\",\n              children: new Date(item.timestamp).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"E85yb7BhBnl3/OpymRdjFiQJ97s=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Container","Grid","Card","CardContent","Typography","axios","jsxDEV","_jsxDEV","Dashboard","_s","items","setItems","fetchItems","response","get","data","error","console","intervalId","setInterval","clearInterval","children","variant","component","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","map","item","xs","sm","md","title","color","description","Date","timestamp","toLocaleString","id","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/imea/imeah-app/src/dashboard/Dashboard.jsx"],"sourcesContent":["// src/dashboard/Dashboard.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Container, Grid, Card, CardContent, Typography } from '@mui/material';\r\nimport axios from 'axios';\r\n\r\nconst Dashboard = () => {\r\n  const [items, setItems] = useState([]);\r\n\r\n  // Function to fetch items from the backend\r\n  const fetchItems = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/items');  // Adjust API endpoint as needed\r\n      setItems(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching items:', error);\r\n    }\r\n  };\r\n\r\n  // Auto-refresh the list when the component mounts\r\n  useEffect(() => {\r\n    fetchItems();\r\n\r\n    // Set up a polling mechanism to refresh items every 10 seconds\r\n    const intervalId = setInterval(fetchItems, 10000);\r\n\r\n    // Clear interval on component unmount\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n        Dashboard\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        {items.map((item) => (\r\n          <Grid item xs={12} sm={6} md={4} key={item.id}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                  {item.title}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                  {item.description}\r\n                </Typography>\r\n                <Typography variant=\"caption\" color=\"textSecondary\">\r\n                  {new Date(item.timestamp).toLocaleString()}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,IAAI,EAAEC,IAAI,EAAEC,WAAW,EAAEC,UAAU,QAAQ,eAAe;AAC9E,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAMc,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,6BAA6B,CAAC,CAAC,CAAE;MAClEH,QAAQ,CAACE,QAAQ,CAACE,IAAI,CAAC;IACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;;EAED;EACAjB,SAAS,CAAC,MAAM;IACda,UAAU,CAAC,CAAC;;IAEZ;IACA,MAAMM,UAAU,GAAGC,WAAW,CAACP,UAAU,EAAE,KAAK,CAAC;;IAEjD;IACA,OAAO,MAAMQ,aAAa,CAACF,UAAU,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA,CAACP,SAAS;IAAAqB,QAAA,gBACRd,OAAA,CAACH,UAAU;MAACkB,OAAO,EAAC,IAAI;MAACC,SAAS,EAAC,IAAI;MAACC,YAAY;MAAAH,QAAA,EAAC;IAErD;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACbrB,OAAA,CAACN,IAAI;MAAC4B,SAAS;MAACC,OAAO,EAAE,CAAE;MAAAT,QAAA,EACxBX,KAAK,CAACqB,GAAG,CAAEC,IAAI,iBACdzB,OAAA,CAACN,IAAI;QAAC+B,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAAAd,QAAA,eAC9Bd,OAAA,CAACL,IAAI;UAAAmB,QAAA,eACHd,OAAA,CAACJ,WAAW;YAAAkB,QAAA,gBACVd,OAAA,CAACH,UAAU;cAACkB,OAAO,EAAC,IAAI;cAACC,SAAS,EAAC,IAAI;cAAAF,QAAA,EACpCW,IAAI,CAACI;YAAK;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD,CAAC,eACbrB,OAAA,CAACH,UAAU;cAACkB,OAAO,EAAC,OAAO;cAACe,KAAK,EAAC,eAAe;cAAAhB,QAAA,EAC9CW,IAAI,CAACM;YAAW;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACP,CAAC,eACbrB,OAAA,CAACH,UAAU;cAACkB,OAAO,EAAC,SAAS;cAACe,KAAK,EAAC,eAAe;cAAAhB,QAAA,EAChD,IAAIkB,IAAI,CAACP,IAAI,CAACQ,SAAS,CAAC,CAACC,cAAc,CAAC;YAAC;cAAAhB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV;MAAC,GAb6BI,IAAI,CAACU,EAAE;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAcvC,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEhB,CAAC;AAACnB,EAAA,CAlDID,SAAS;AAAAmC,EAAA,GAATnC,SAAS;AAoDf,eAAeA,SAAS;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}